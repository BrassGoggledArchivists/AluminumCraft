// Date: 10/1/2011 6:15:46 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package net.minecraft.src;

public class ALModelRobot extends ModelBase
{

    public ALModelRobot()
    {
        this(0.0F);
    }

    public ALModelRobot(float f)
    {
        this(f, 0.0F);
    }

    public ALModelRobot(float f, float f1)


      {
        body1 = new ModelRenderer(this, 16, 16);
        body1.addBox(0F, -3F, 0F, 8, 6, 4);
        body1.setRotationPoint(0F, 10F, 0F);
        body1.rotateAngleX = 0F;
        body1.rotateAngleY = 0F;
        body1.rotateAngleZ = 1.5708F;
        body1.mirror = false;
        leftarm1 = new ModelRenderer(this, 44, 16);
        leftarm1.addBox(0F, 0F, 0F, 3, 3, 1);
        leftarm1.setRotationPoint(-1.5F, 9F, 3.5F);
        leftarm1.rotateAngleX = -1.5708F;
        leftarm1.rotateAngleY = 0F;
        leftarm1.rotateAngleZ = 0F;
        leftarm1.mirror = false;
        head = new ModelRenderer(this, 0, 0);
        head.addBox(-4F, -8F, -4F, 5, 3, 9);
        head.setRotationPoint(1.5F, 14F, 0F);
        head.rotateAngleX = 0F;
        head.rotateAngleY = 0F;
        head.rotateAngleZ = 0F;
        head.mirror = false;
        body = new ModelRenderer(this, 16, 16);
        body.addBox(-4F, 0F, -2F, 8, 6, 4);
        body.setRotationPoint(0F, 19F, -1F);
        body.rotateAngleX = 1.5708F;
        body.rotateAngleY = 0F;
        body.rotateAngleZ = 0F;
        body.mirror = false;
        rightarm = new ModelRenderer(this, 40, 16);
        rightarm.addBox(-3F, -2F, -2F, 1, 9, 1);
        rightarm.setRotationPoint(-1F, 13F, 0F);
        rightarm.rotateAngleX = -1.5708F;
        rightarm.rotateAngleY = 0F;
        rightarm.rotateAngleZ = 0F;
        rightarm.mirror = false;
        leftarm = new ModelRenderer(this, 40, 16);
        leftarm.addBox(-1F, -2F, -2F, 1, 9, 1);
        leftarm.setRotationPoint(4F, 13F, 0F);
        leftarm.rotateAngleX = -1.5708F;
        leftarm.rotateAngleY = 0F;
        leftarm.rotateAngleZ = 0F;
        leftarm.mirror = true;
        rightleg = new ModelRenderer(this, 0, 16);
        rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightleg.setRotationPoint(-3F, 22F, -6F);
        rightleg.rotateAngleX = 1.5708F;
        rightleg.rotateAngleY = 0F;
        rightleg.rotateAngleZ = 0F;
        rightleg.mirror = false;
        leftleg = new ModelRenderer(this, 0, 16);
        leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftleg.setRotationPoint(3F, 22F, -6F);
        leftleg.rotateAngleX = 1.5708F;
        leftleg.rotateAngleY = 0F;
        leftleg.rotateAngleZ = 0F;
        leftleg.mirror = true;
      }

      public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
      {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5);
        body1.render(f5);
        leftarm1.render(f5);
        head.render(f5);
        body.render(f5);
        rightarm.render(f5);
        leftarm.render(f5);
        rightleg.render(f5);
        leftleg.render(f5);
      }

      public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
      {
        super.setRotationAngles(f, f1, f2, f3, f4, f5);
        head.rotateAngleY = f3 / 57.29578F;
        head.rotateAngleX = f4 / 57.29578F;

       leftarm.rotateAngleY = f3 / 57.29578F;
       rightarm.rotateAngleY = f4 / 57.29578F;
       
       rightleg.rotateAngleY = MathHelper.cos(f * 0.0662F) * 0.5F * f1 * 0.2F;;
        leftleg.rotateAngleY = MathHelper.cos(f * 0.0662F + 3.141593F) * 0.5F * f1 * 0.2F;;
      }

      //fields
        ModelRenderer body1;
        ModelRenderer leftarm1;
        ModelRenderer head;
        ModelRenderer body;
        ModelRenderer rightarm;
        ModelRenderer leftarm;
        ModelRenderer rightleg;
        ModelRenderer leftleg;
}
